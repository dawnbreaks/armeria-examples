buildscript {
    repositories {
        mavenLocal()
        maven {
            name "aliyunMirror"
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        mavenCentral()
        jcenter()
    }
}

plugins {
    id "com.google.protobuf" version "0.8.8"
    id "io.spring.dependency-management" version "1.0.7.RELEASE"
    id "org.springframework.boot" version "2.1.3.RELEASE"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
    jcenter()

}

dependencyManagement {
    imports {
        mavenBom 'com.linecorp.armeria:armeria-bom:0.82.0'
    }
}

springBoot {
    mainClassName = 'example.springframework.boot.armeria.Main'
}

protobuf {
    protoc {
//        generatedFilesBaseDir = "$projectDir/src/main/generated"
    }

//    generateProtoTasks.generatedFilesBaseDir = 'src'

    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.19.0'
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.generateDescriptorSet = true
            task.descriptorSetOptions.includeSourceInfo = true
            task.descriptorSetOptions.includeImports = true
            task.descriptorSetOptions.path =
                    "${buildDir}/resources/main/META-INF/armeria/grpc/grpc-service.dsc"
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {
//                outputSubDir = 'java'
                }
            }
        }
    }
}

dependencies {

    // Adjust the list as you need.
    [
     'armeria-grpc',
//     'armeria-jetty',
     'armeria-logback',
     'armeria-rxjava',
     'armeria-zookeeper'].each {
        compile "com.linecorp.armeria:${it}"
    }

    compile 'io.grpc:grpc-netty-shaded:1.19.0'



    compile 'com.linecorp.armeria:armeria-spring-boot-starter'
    compile 'org.hibernate.validator:hibernate-validator'

    compileOnly 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    runtime 'com.linecorp.armeria:armeria-spring-boot-actuator-starter'
    // Logging
    runtime 'ch.qos.logback:logback-classic:1.2.3'
    runtime 'org.slf4j:log4j-over-slf4j:1.7.26'


    testCompile 'junit:junit:4.12'
    testCompile 'net.javacrumbs.json-unit:json-unit-fluent:2.4.0'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

tasks.withType(JavaCompile) {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
    options.debug = true
    options.compilerArgs += '-parameters'
}
